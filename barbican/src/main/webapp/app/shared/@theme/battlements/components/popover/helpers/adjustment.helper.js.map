{"version":3,"file":"adjustment.helper.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/popover/helpers/adjustment.helper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAC;AAC3D,OAAO,EAAE,mBAAmB,EAAE,kBAAkB,EAAqB,MAAM,SAAS,CAAC;;;;AAKrF,IAAM,qBAAqB;IACzB,GAAC,mBAAmB,CAAC,SAAS,IAAG;QAC/B,kBAAkB,CAAC,GAAG;QACtB,kBAAkB,CAAC,KAAK;QACxB,kBAAkB,CAAC,MAAM;QACzB,kBAAkB,CAAC,IAAI;KACxB;IAED,GAAC,mBAAmB,CAAC,gBAAgB,IAAG;QACtC,kBAAkB,CAAC,GAAG;QACtB,kBAAkB,CAAC,IAAI;QACvB,kBAAkB,CAAC,MAAM;QACzB,kBAAkB,CAAC,KAAK;KACzB;OACF,CAAC;AAEF,IAAA;;;IAEE;;;;;;;;;;SAUK;;;;;;;;;;;;IACE,yBAAM;;;;;;;;;;;IAAb,UAAc,MAAkB,EAClB,IAAgB,EAChB,SAA6B,EAC7B,UAA+B;QAC3C,IAAM,UAAU,GAAG,qBAAqB,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7D,IAAM,OAAO,GAAG,kBAAkB,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAC1E,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,EAAE;YAAI,OAAA,CAAC;gBAClC,QAAQ,EAAE,mBAAmB,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC;gBAC5D,SAAS,EAAE,EAAE;aACd,CAAC;QAHiC,CAGjC,CAAC,CAAC;QAEJ,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACxD;IAED;;;;;;;SAOK;;;;;;;;;IACU,6BAAU;;;;;;;;IAAzB,UAA0B,MAAkB,EAAE,QAA6B;QACzE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,kBAAkB,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAA7C,CAA6C,CAAC,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;KACnG;IAED;;;;;;;SAOK;;;;;;;;;IACU,6BAAU;;;;;;;;IAAzB,UAA0B,MAAkB,EAAE,QAA2B;QACvE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC;eAChD,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC;eAC/C,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;eAC/E,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;KACrF;IAED;;;;;;;;;;;;;;;;;;;;SAoBK;;;;;;;;;;;;;;;;;;;;;;IACU,kCAAe;;;;;;;;;;;;;;;;;;;;;IAA9B,UAA+B,SAA6B,EAC7B,UAAgC;QAC7D,IAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,CAAC,KAAK,CAAC,MAAM,OAAZ,KAAK,EAAW,UAAU,EAAE;KACpC;6BAtGH;IAuGC,CAAA;AAjFD,8BAiFC","sourcesContent":["import { NbPositioningHelper } from './positioning.helper';\nimport { NbPopoverAdjustment, NbPopoverPlacement, NbPopoverPosition } from './model';\n\n/**\n * Describes the bypass order of the {@link NbPopoverPlacement} in the {@link NbPopoverAdjustment}.\n * */\nconst NB_ORDERED_PLACEMENTS = {\n  [NbPopoverAdjustment.CLOCKWISE]: [\n    NbPopoverPlacement.TOP,\n    NbPopoverPlacement.RIGHT,\n    NbPopoverPlacement.BOTTOM,\n    NbPopoverPlacement.LEFT,\n  ],\n\n  [NbPopoverAdjustment.COUNTERCLOCKWISE]: [\n    NbPopoverPlacement.TOP,\n    NbPopoverPlacement.LEFT,\n    NbPopoverPlacement.BOTTOM,\n    NbPopoverPlacement.RIGHT,\n  ],\n};\n\nexport class NbAdjustmentHelper {\n\n  /**\n   * Calculated {@link NbPopoverPosition} based on placed element, host element,\n   * placed element placement and adjustment strategy.\n   *\n   * @param placed {ClientRect} placed element relatively host.\n   * @param host {ClientRect} host element.\n   * @param placement {NbPopoverPlacement} placed element placement relatively host.\n   * @param adjustment {NbPopoverAdjustment} adjustment strategy.\n   *\n   * @return {NbPopoverPosition} calculated position.\n   * */\n  static adjust(placed: ClientRect,\n                host: ClientRect,\n                placement: NbPopoverPlacement,\n                adjustment: NbPopoverAdjustment): NbPopoverPosition {\n    const placements = NB_ORDERED_PLACEMENTS[adjustment].slice();\n    const ordered = NbAdjustmentHelper.orderPlacements(placement, placements);\n    const possible = ordered.map(pl => ({\n      position: NbPositioningHelper.calcPosition(placed, host, pl),\n      placement: pl,\n    }));\n\n    return NbAdjustmentHelper.chooseBest(placed, possible);\n  }\n\n  /**\n   * Searches first adjustment which doesn't go beyond the viewport.\n   *\n   * @param placed {ClientRect} placed element relatively host.\n   * @param possible {NbPopoverPosition[]} possible positions list ordered according to adjustment strategy.\n   *\n   * @return {NbPopoverPosition} calculated position.\n   * */\n  private static chooseBest(placed: ClientRect, possible: NbPopoverPosition[]): NbPopoverPosition {\n    return possible.find(adjust => NbAdjustmentHelper.inViewPort(placed, adjust)) || possible.shift();\n  }\n\n  /**\n   * Finds out is adjustment doesn't go beyond of the view port.\n   *\n   * @param placed {ClientRect} placed element relatively host.\n   * @param position {NbPopoverPosition} position of the placed element.\n   *\n   * @return {boolean} true if placed element completely viewport.\n   * */\n  private static inViewPort(placed: ClientRect, position: NbPopoverPosition): boolean {\n    return position.position.top - window.pageYOffset > 0\n      && position.position.left - window.pageXOffset > 0\n      && position.position.top + placed.height < window.innerHeight + window.pageYOffset\n      && position.position.left + placed.width < window.innerWidth + window.pageXOffset;\n  }\n\n  /**\n   * Reorder placements list to make placement start point and fit {@link NbPopoverAdjustment}\n   *\n   * @param placement {NbPopoverPlacement} active placement\n   * @param placements {NbPopoverPlacement[]} placements list according to the active adjustment strategy.\n   *\n   * @return {NbPopoverPlacement[]} correctly ordered placements list.\n   *\n   * @example order placements for {@link NbPopoverPlacement#RIGHT} and {@link NbPopoverAdjustment#CLOCKWISE}\n   * ```\n   * const placements = NB_ORDERED_PLACEMENTS[NbPopoverAdjustment.CLOCKWISE];\n   * const ordered = orderPlacement(NbPopoverPlacement.RIGHT, placements);\n   *\n   * expect(ordered).toEqual([\n   *  NbPopoverPlacement.RIGHT,\n   *  NbPopoverPlacement.BOTTOM,\n   *  NbPopoverPlacement.LEFT,\n   *  NbPopoverPlacement.TOP,\n   * ]);\n   * ```\n   * */\n  private static orderPlacements(placement: NbPopoverPlacement,\n                                 placements: NbPopoverPlacement[]): NbPopoverPlacement[] {\n    const index = placements.indexOf(placement);\n    const start = placements.splice(index, placements.length);\n    return start.concat(...placements);\n  }\n}\n"]}