{"version":3,"file":"trigger.helper.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/popover/helpers/trigger.helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { fromEvent as observableFromEvent } from 'rxjs/observable/fromEvent';\nimport { empty as observableEmpty } from 'rxjs/observable/empty';\nimport { NbPopoverMode, NbPopoverTrigger } from './model';\nimport { filter } from 'rxjs/operators/filter';\nimport { delay } from 'rxjs/operators/delay';\nimport { takeWhile } from 'rxjs/operators/takeWhile';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { repeat } from 'rxjs/operators/repeat';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\n\n\n/**\n * Describes popover triggers strategies based on popover {@link NbPopoverMode} mode.\n * */\nconst NB_TRIGGERS = {\n\n  /**\n   * Creates toggle and close events streams based on popover {@link NbPopoverMode#CLICK} mode.\n   * Fires toggle event when click was performed on the host element.\n   * Fires close event when click was performed on the document but\n   * not on the host or container or popover container isn't rendered yet.\n   *\n   * @param host {HTMLElement} popover host element.\n   * @param getContainer {Function} popover container getter.\n   *\n   * @return {NbPopoverTrigger} open and close events streams.\n   * */\n  [NbPopoverMode.CLICK](host: HTMLElement, getContainer: Function): NbPopoverTrigger {\n    return {\n      open: observableEmpty(),\n      close: observableFromEvent<Event>(document, 'click')\n        .pipe(\n          filter(event => !host.contains(event.target as Node)\n            && getContainer()\n            && !getContainer().location.nativeElement.contains(event.target)),\n        ),\n      toggle: observableFromEvent(host, 'click'),\n    };\n  },\n\n  /**\n   * Creates open and close events streams based on popover {@link NbPopoverMode#HOVER} mode.\n   * Fires open event when mouse hovers over the host element and stay over at least 100 milliseconds.\n   * Fires close event when mouse leaves the host element and stops out of the host and popover container.\n   *\n   * @param host {HTMLElement} popover host element.\n   * @param getContainer {Function} popover container getter.\n   *\n   * @return {NbPopoverTrigger} open and close events streams.\n   * */\n  [NbPopoverMode.HOVER](host: HTMLElement, getContainer: Function): NbPopoverTrigger {\n    return {\n      open: observableFromEvent<Event>(host, 'mouseenter')\n        .pipe(\n          delay(100),\n          takeUntil(observableFromEvent(host, 'mouseleave')),\n          repeat(),\n        ),\n      close: observableFromEvent<Event>(host, 'mouseleave')\n        .pipe(\n          switchMap(() => observableFromEvent<Event>(document, 'mousemove')\n            .pipe(\n              debounceTime(100),\n              takeWhile(() => !!getContainer()),\n              filter(event => !host.contains(event.target as Node)\n                && !getContainer().location.nativeElement.contains(event.target),\n              ),\n            ),\n          ),\n        ),\n      toggle: observableEmpty(),\n    }\n  },\n\n  /**\n   * Creates open and close events streams based on popover {@link NbPopoverMode#HOVER} mode.\n   * Fires open event when mouse hovers over the host element and stay over at least 100 milliseconds.\n   * Fires close event when mouse leaves the host element.\n   *\n   * @param host {HTMLElement} popover host element.\n   *\n   * @return {NbPopoverTrigger} open and close events streams.\n   * */\n  [NbPopoverMode.HINT](host: HTMLElement): NbPopoverTrigger {\n    return {\n      open: observableFromEvent<Event>(host, 'mouseenter')\n        .pipe(\n          delay(100),\n          takeUntil(observableFromEvent(host, 'mouseleave')),\n          repeat(),\n        ),\n      close: observableFromEvent(host, 'mouseleave'),\n      toggle: observableEmpty(),\n    }\n  },\n};\n\nexport class NbTriggerHelper {\n\n  /**\n   * Creates open and close events streams based on popover {@link NbPopoverMode} mode.\n   *\n   * @param host {HTMLElement} popover host element.\n   * @param getContainer {Function} popover container getter.\n   * Getter required because listen can be called when container isn't initialized.\n   * @param mode {NbPopoverMode} describes container triggering strategy.\n   *\n   * @return {NbPopoverTrigger} open and close events streams.\n   * */\n  static createTrigger(host: HTMLElement, getContainer: Function, mode: NbPopoverMode): NbPopoverTrigger {\n    const createTrigger = NB_TRIGGERS[mode];\n    return createTrigger.call(NB_TRIGGERS, host, getContainer);\n  }\n}\n"]}