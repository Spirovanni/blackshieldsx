{"version":3,"file":"badge.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/badge/badge.component.ts"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAqDvB,gBAAgB,CAAC,SAAS;0BAC7B,gBAAgB,CAAC,cAAc;;;;;oBAM5B,EAAE;;0BASb,sCAAQ;;;;;;;;kBAAC,KAAK;YACzB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;;;;;0BASU,oCAAM;;;;;;;kBAAC,KAAK;YACvB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;;;;;gCA1CwB,UAAU;iCACT,WAAW;mCACT,aAAa;oCACZ,cAAc;sCAEZ,SAAS;mCACZ,MAAM;sCACH,SAAS;sCACT,SAAS;qCACV,QAAQ;;gBAjBzC,SAAS,SAAC;oBACT,QAAQ,EAAE,UAAU;oBACpB,SAAS,EAAE,CAAC,uBAAuB,CAAC;oBACpC,QAAQ,EAAE,8FAET;iBACF;;;;;yBAoBE,KAAK;6BASL,KAAK;2BAYL,KAAK;;2BAvFR;;SA+Ca,gBAAgB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input } from '@angular/core';\n\n/**\n * Badge is a simple labeling component.\n * It can be used to add additional information to any content or highlight unread items.\n *\n * Element is absolute positioned, so parent should be\n * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).\n * It means parent `position` should be set to anything except `static`, e.g. `relative`,\n * `absolute`, `fixed`, or `sticky`.\n *\n *\n * @example Badge with default position and status(color):\n *\n * ```\n * <nb-badge text=\"badgeText\"></nb-badge>\n * ```\n *\n * @example Badge located on the bottom right with warning status:\n *\n * ```\n * <nb-badge text=\"badgeText\" status=\"warning\" position=\"bottom right\">\n * </nb-badge>\n * ```\n *\n * @styles\n *\n * badge-fg-text:\n * badge-primary-bg-color:\n * badge-success-bg-color:\n * badge-info-bg-color:\n * badge-warning-bg-color:\n * badge-danger-bg-color:\n */\n@Component({\n  selector: 'nb-badge',\n  styleUrls: ['./badge.component.css'],\n  template: `\n    <span class=\"nb-badge {{positionClass}} nb-badge-{{colorClass}}\">{{text}}</span>\n  `,\n})\nexport class NbBadgeComponent {\n  static readonly TOP_LEFT = 'top left';\n  static readonly TOP_RIGHT = 'top right';\n  static readonly BOTTOM_LEFT = 'bottom left';\n  static readonly BOTTOM_RIGHT = 'bottom right';\n\n  static readonly STATUS_PRIMARY = 'primary';\n  static readonly STATUS_INFO = 'info';\n  static readonly STATUS_SUCCESS = 'success';\n  static readonly STATUS_WARNING = 'warning';\n  static readonly STATUS_DANGER = 'danger';\n\n  positionClass: string = NbBadgeComponent.TOP_RIGHT;\n  colorClass: string = NbBadgeComponent.STATUS_PRIMARY;\n\n  /**\n   * Text to display\n   * @type string\n   */\n  @Input() text: string = '';\n\n  /**\n   * Badge position\n   *\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right'\n   * @type string\n   */\n  @Input() set position(value) {\n    if (value) {\n      this.positionClass = value;\n    }\n  }\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   * @type string\n   */\n  @Input() set status(value) {\n    if (value) {\n      this.colorClass = value;\n    }\n  }\n}\n"]}